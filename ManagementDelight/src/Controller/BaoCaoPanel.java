/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Controller;

import Model.StatisticsHelper;
import java.awt.Image;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author USER
 */
public class BaoCaoPanel extends javax.swing.JPanel {

    /**
     * Creates new form BaoCaoPanel
     */
    public BaoCaoPanel() {
        initComponents();
        loadCombo();
        ImageIcon originalIcon2 = new ImageIcon(getClass().getResource("/Image/order.png"));
        Image scaledImage2 = originalIcon2.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon2 = new ImageIcon(scaledImage2);
        lblDonHang.setIcon(resizedIcon2);
        
        ImageIcon originalIcon = new ImageIcon(getClass().getResource("/Image/order.png"));
        Image scaledImage = originalIcon.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon = new ImageIcon(scaledImage);
        lblPhieuNhap.setIcon(resizedIcon);
        
         ImageIcon originalIcon4 = new ImageIcon(getClass().getResource("/Image/custom.png"));
        Image scaledImage4 = originalIcon4.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon4 = new ImageIcon(scaledImage4);
        lblKhachHang.setIcon(resizedIcon4);
        
        ImageIcon originalIcon5 = new ImageIcon(getClass().getResource("/Image/rating.png"));
        Image scaledImage5 = originalIcon5.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon5 = new ImageIcon(scaledImage5);
        lblNhanVien.setIcon(resizedIcon5);
        

        ImageIcon originalIcon3 = new ImageIcon(getClass().getResource("/Image/printer.png"));
        Image scaledImage3 = originalIcon3.getImage().getScaledInstance(30, 30, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon3 = new ImageIcon(scaledImage3);
        lblInPN.setIcon(resizedIcon3);
        lblInDH.setIcon(resizedIcon3);
        lblInKH.setIcon(resizedIcon3);
        lblInNV.setIcon(resizedIcon3);
       int totalKH = StatisticsHelper.getTotalCustomers();
       int totalNV = StatisticsHelper.getTotalNV();

        lblKhachHang.setText("Tổng khách hàng: " + totalKH);
        lblNhanVien.setText("Tổng nhân viên: " + totalNV);
    }
    
    private void updateStatistics() {
    String selectedThang = (String) cbThang.getSelectedItem();
    String selectedNam = (String) cbNam.getSelectedItem();

    Integer thang = null;
    Integer nam = null;

    // Xử lý tháng
    if (selectedThang != null && !selectedThang.equals("Tất cả")) {
        try {
            if (selectedThang.startsWith("Tháng ")) {
                thang = Integer.parseInt(selectedThang.replace("Tháng ", ""));
            } else {
                System.err.println("Giá trị tháng không đúng định dạng: " + selectedThang);
            }
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }

    }

    // Xử lý năm
    if (selectedNam != null && !selectedNam.equals("Tất cả")) {
        try {
            nam = Integer.parseInt(selectedNam);
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
    }

    int totalOrders = StatisticsHelper.getTotalOrdersTime(thang, nam);
    int totalPhieuNhap = StatisticsHelper.getTotalPhieuNhapTime(thang, nam);

    lblDonHang.setText("Tổng đơn hàng: " + totalOrders);
    lblPhieuNhap.setText("Tổng phiếu nhập: " + totalPhieuNhap);
}

    
    private void loadCombo(){
        
    // Gán giá trị cho cbThang (1 đến 12)
        cbThang.setModel(new javax.swing.DefaultComboBoxModel());
        for (int i = 1; i <= 12; i++) {
            cbThang.addItem("Tháng " + i);
        }
        cbThang.addItem("Tất cả");

        // Gán giá trị cho cbNam (từ 2020 đến năm hiện tại)
        cbNam.setModel(new javax.swing.DefaultComboBoxModel());
        int currentYear = java.time.Year.now().getValue(); // Lấy năm hiện tại
        for (int year = 2020; year <= currentYear; year++) {
            cbNam.addItem(String.valueOf(year));
        }
        cbNam.addItem("Tất cả");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDonHang = new javax.swing.JLabel();
        lblPhieuNhap = new javax.swing.JLabel();
        cbThang = new javax.swing.JComboBox<>();
        cbNam = new javax.swing.JComboBox<>();
        lblInPN = new javax.swing.JLabel();
        lblInDH = new javax.swing.JLabel();
        lblKhachHang = new javax.swing.JLabel();
        lblInKH = new javax.swing.JLabel();
        lblNhanVien = new javax.swing.JLabel();
        lblInNV = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 153, 153));

        lblDonHang.setForeground(new java.awt.Color(255, 153, 153));
        lblDonHang.setText("Tổng đơn hàng:");

        lblPhieuNhap.setForeground(new java.awt.Color(255, 153, 153));
        lblPhieuNhap.setText("Tổng phiếu nhập");

        cbThang.setBackground(new java.awt.Color(231, 242, 236));
        cbThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbThangActionPerformed(evt);
            }
        });

        cbNam.setBackground(new java.awt.Color(231, 242, 236));
        cbNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNamActionPerformed(evt);
            }
        });

        lblInPN.setText("Xuất báo cáo");
        lblInPN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInPNMouseClicked(evt);
            }
        });

        lblInDH.setText("Xuất báo cáo");
        lblInDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInDHMouseClicked(evt);
            }
        });

        lblKhachHang.setForeground(new java.awt.Color(255, 153, 153));
        lblKhachHang.setText("Tổng phiếu nhập");

        lblInKH.setText("Xuất danh sách");
        lblInKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInKHMouseClicked(evt);
            }
        });

        lblNhanVien.setForeground(new java.awt.Color(255, 153, 153));
        lblNhanVien.setText("Tổng phiếu nhập");

        lblInNV.setText("Xuất danh sách");
        lblInNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInNVMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDonHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInPN, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInDH, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(225, 225, 225))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                        .addComponent(lblInNV, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblInKH, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(193, 193, 193))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInDH, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInPN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInKH, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInNV, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbThangActionPerformed
        // TODO add your handling code here:
        updateStatistics();
    }//GEN-LAST:event_cbThangActionPerformed

    private void cbNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNamActionPerformed
        // TODO add your handling code here:
        updateStatistics();
    }//GEN-LAST:event_cbNamActionPerformed

    private void lblInPNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInPNMouseClicked
        // TODO add your handling code here:
            try {
        // Lấy mã đơn hàng từ giao diện
        int thang = Integer.parseInt(cbThang.getSelectedItem().toString().replace("Tháng ", "").trim());
        int nam = Integer.parseInt(cbNam.getSelectedItem().toString().trim());
        // Tạo Map chứa tham số truyền vào report
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("ThangNhap", thang);
        parameters.put("NamNhap", nam);

        // Kết nối cơ sở dữ liệu
        Connection conn = DriverManager.getConnection(
            "jdbc:sqlserver://localhost:1433;databaseName=ManagerDelight;encrypt=true;trustServerCertificate=true;user=sa;password=123"
        );

        // Load file .jrxml từ thư mục src/Report (nên nằm trong src/main/resources nếu dùng Maven)
        InputStream jrxmlStream = getClass().getClassLoader().getResourceAsStream("Report/PhieuNhapRpt.jrxml");

        // Compile file jrxml thành JasperReport
        JasperReport report = JasperCompileManager.compileReport(jrxmlStream);

        // Đổ dữ liệu vào report
        JasperPrint print = JasperFillManager.fillReport(report, parameters, conn);

        // Hiển thị report
        JasperViewer.viewReport(print, false);

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi in phiếu nhập: " + e.getMessage());
    }
    }//GEN-LAST:event_lblInPNMouseClicked

    private void lblInDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInDHMouseClicked
         try {
        int thang = Integer.parseInt(cbThang.getSelectedItem().toString().replace("Tháng ", "").trim());
        int nam = Integer.parseInt(cbNam.getSelectedItem().toString().trim());
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("ThangDat", thang);
        parameters.put("NamDat", nam);

        Connection conn = DriverManager.getConnection(
            "jdbc:sqlserver://localhost:1433;databaseName=ManagerDelight;encrypt=true;trustServerCertificate=true;user=sa;password=123"
        );

        // Cách tốt hơn: dùng getResourceAsStream với đường dẫn đúng
        InputStream jrxmlStream = getClass().getResourceAsStream("/Report/DonHangRpt.jrxml");

        if (jrxmlStream == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy file CTPhieuNhap.jrxml!");
            return;
        }

        JasperReport report = JasperCompileManager.compileReport(jrxmlStream);
        JasperPrint print = JasperFillManager.fillReport(report, parameters, conn);

        JasperViewer.viewReport(print, false);

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi in hóa đơn: " + e.getMessage());
    }
    }//GEN-LAST:event_lblInDHMouseClicked

    private void lblInKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInKHMouseClicked
        try {
        Connection conn = DriverManager.getConnection(
            "jdbc:sqlserver://localhost:1433;databaseName=ManagerDelight;encrypt=true;trustServerCertificate=true;user=sa;password=123"
        );

        // Load file báo cáo .jrxml
        InputStream jrxmlStream = getClass().getResourceAsStream("/Report/KhachHangRpt.jrxml");

        if (jrxmlStream == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy file KhachHangRpt.jrxml!");
            return;
        }

        // Compile report
        JasperReport report = JasperCompileManager.compileReport(jrxmlStream);

        // Fill report với connection (không có tham số)
        JasperPrint print = JasperFillManager.fillReport(report, null, conn);

        // Hiển thị report
        JasperViewer.viewReport(print, false);

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi in hóa đơn: " + e.getMessage());
    }
    }//GEN-LAST:event_lblInKHMouseClicked

    private void lblInNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInNVMouseClicked
        // TODO add your handling code here:
         try {
        Connection conn = DriverManager.getConnection(
            "jdbc:sqlserver://localhost:1433;databaseName=ManagerDelight;encrypt=true;trustServerCertificate=true;user=sa;password=123"
        );

        // Load file báo cáo .jrxml
        InputStream jrxmlStream = getClass().getResourceAsStream("/Report/NhanVienRpt.jrxml");

        if (jrxmlStream == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy file KhachHangRpt.jrxml!");
            return;
        }

        // Compile report
        JasperReport report = JasperCompileManager.compileReport(jrxmlStream);

        // Fill report với connection (không có tham số)
        JasperPrint print = JasperFillManager.fillReport(report, null, conn);

        // Hiển thị report
        JasperViewer.viewReport(print, false);

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi in hóa đơn: " + e.getMessage());
    }
    }//GEN-LAST:event_lblInNVMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbNam;
    private javax.swing.JComboBox<String> cbThang;
    private javax.swing.JLabel lblDonHang;
    private javax.swing.JLabel lblInDH;
    private javax.swing.JLabel lblInKH;
    private javax.swing.JLabel lblInNV;
    private javax.swing.JLabel lblInPN;
    private javax.swing.JLabel lblKhachHang;
    private javax.swing.JLabel lblNhanVien;
    private javax.swing.JLabel lblPhieuNhap;
    // End of variables declaration//GEN-END:variables
}
